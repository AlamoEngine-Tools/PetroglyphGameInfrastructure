<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<AssemblyName>AET.SteamAbstraction.Test</AssemblyName>
	</PropertyGroup>

	<PropertyGroup>
		<TargetFrameworks>net8.0</TargetFrameworks>
		<TargetFrameworks Condition="!$([MSBuild]::IsOsUnixLike())">$(TargetFrameworks);net48</TargetFrameworks>
		<IsPackable>false</IsPackable>
		<IsTestable>true</IsTestable>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="GitHubActionsTestLogger" Version="2.4.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.0" />
		<PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.12.0" />
		<PackageReference Include="Testably.Abstractions.Testing" Version="3.2.4" />
		<PackageReference Include="xunit" Version="2.9.2" />
		<PackageReference Include="xunit.runner.visualstudio" Version="3.0.0">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="coverlet.collector" Version="6.0.2">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\..\src\AET.SteamAbstraction\AET.SteamAbstraction.csproj" />
	  <ProjectReference Include="..\AET.SteamAbstraction.Testing\AET.SteamAbstraction.Testing.csproj" />
	</ItemGroup>

	<PropertyGroup>
		<IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
		<IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' != 'true'">true</IsLinux>
	</PropertyGroup>

	<PropertyGroup Condition="'$(IsWindows)'=='true'">
		<DefineConstants>Windows</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsLinux)'=='true'">
		<DefineConstants>Linux</DefineConstants>
	</PropertyGroup>

</Project>
